Homework #3
Your name: Amey Erdenebileg


---------------------------------------- Question 1 Query ---------------------------------------- 

select count(*) from film where rental_rate = '4.99';


---------------------------------------- Question 1 Results ---------------------------------------- 					
 count 
-------
   336
(1 row)	

---------------------------------------- Question 2 Query ---------------------------------------- 



select last_name, first_name from customer where active = 0;


---------------------------------------- Question 2 Results ---------------------------------------- 						

 last_name | first_name 
-----------+------------
 MARTIN    | SANDRA
 COX       | JUDITH
 WELLS     | SHEILA
 MATTHEWS  | ERICA
 LARSON    | HEIDI
 NEAL      | PENNY
 GOODEN    | KENNETH
 ARCE      | HARRY
 RUNYON    | NATHAN
 CULP      | THEODORE
 CRAWLEY   | MAURICE
 EASTER    | BEN
 JUNG      | CHRISTIAN
 EGGLESTON | JIMMIE
 ROUSH     | TERRANCE
(15 rows)



---------------------------------------- Question 3 Query ---------------------------------------- 

select payment_id, amount, payment_date from payment order by amount desc limit 10;


---------------------------------------- Question 3 Results ---------------------------------------- 					

 payment_id | customer_id | staff_id | rental_id | amount |         payment_date          
------------+-------------+----------+-----------+--------+-------------------------------
      24866 |         237 |        2 |     11479 |  11.99 | 2017-03-02 20:46:39.996577-07
      28814 |         592 |        1 |      3973 |  11.99 | 2017-04-06 21:26:57.996577-06
      23757 |         116 |        2 |     14763 |  11.99 | 2017-03-21 22:02:26.996577-06
      24553 |         195 |        2 |     16040 |  11.99 | 2017-03-23 20:47:59.996577-06
      17354 |         305 |        1 |      2166 |  11.99 | 2017-02-17 22:19:47.996577-07
      28799 |         591 |        2 |      4383 |  11.99 | 2017-04-07 19:14:17.996577-06
      20403 |         362 |        1 |     14759 |  11.99 | 2017-03-21 21:57:24.996577-06
      22650 |         204 |        2 |     15415 |  11.99 | 2017-03-22 22:17:22.996577-06
      17055 |         196 |        2 |       106 |  11.99 | 2017-01-25 16:46:45.996577-07
      29136 |          13 |        2 |      8831 |  11.99 | 2017-04-29 21:06:07.996577-06
(10 rows)

	

---------------------------------------- Question 4 Query ---------------------------------------- 

select count(*) from film;

select count(*) from language inner join film on language.language_id = film.language_id AND language.name = 'English';

---------------------------------------- Question 4 Results ---------------------------------------- 			

count 
-------
  1000
(1 row)	


---------------------------------------- Question 5 Query ---------------------------------------- 

select MAX(maxinv) from (select count(film_id) maxinv from inventory group by film_id) as inv;


---------------------------------------- Question 5 Results ---------------------------------------- 					

 max 
-----
   8
(1 row)	

---------------------------------------- Question 6 Query ---------------------------------------- 


select customer_id, SUM(amount) as "Total_Amount" from payment where customer_id > 500 group by customer_id;



---------------------------------------- Question 6 Results ---------------------------------------- 					

 customer_id | Total_Amount 
-------------+--------------
         550 |       159.68
         539 |        90.78
         554 |       101.78
         576 |       139.66
         509 |       100.80
         556 |        83.79
         529 |       118.71
         502 |       138.66
         587 |       108.74
         578 |        96.78
         506 |       152.65
         508 |       127.75
         599 |        83.81
         596 |        96.72
         512 |       115.74
         523 |        93.78
         538 |       117.71
         595 |       117.70
         534 |        88.76
         597 |        99.75
         548 |        79.81
         501 |        89.79
         545 |        89.79
         528 |       111.75
         563 |       110.71
         557 |        73.76
         559 |       110.72
         513 |       148.69
         589 |       129.72
         555 |        74.83
         522 |       167.67
         567 |        85.80
         575 |       126.71
         507 |        95.75
         543 |        82.78
         565 |       126.71
         566 |       141.66
         551 |        96.74
         532 |       152.68
         592 |       111.71
         553 |       107.76
         519 |       103.77
         521 |        80.77
         558 |       135.72
         540 |       112.76
         598 |        83.78
         526 |       221.55
         524 |        87.81
         588 |       115.71
         586 |        64.81
         572 |       108.75
         593 |       113.74
         549 |        77.80
         552 |        90.79
         541 |       108.76
         577 |       118.72
         505 |        97.79
         561 |        96.73
         525 |        74.81
         531 |       118.75
         546 |       107.74
         562 |       109.75
         537 |       103.75
         581 |       107.73
         591 |       134.73
         503 |       115.68
         573 |       120.71
         517 |       105.75
         585 |       117.76
         511 |        99.76
         514 |        74.78
         582 |       113.75
         504 |       133.72
         560 |       132.70
         547 |        99.77
         518 |       111.74
         583 |       117.77
         569 |       134.68
         527 |        81.76
         590 |       112.75
         564 |        91.76
         535 |       135.68
         579 |       111.73
         510 |       122.74
         584 |       129.70
         515 |       126.72
         574 |       109.72
         571 |       121.76
         516 |        98.74
         542 |        94.82
         594 |       130.73
         533 |       141.67
         568 |        66.79
         544 |        98.78
         570 |        99.74
         580 |        99.73
         530 |        76.77
         536 |       117.75
         520 |       134.68
(99 rows)


---------------------------------------- Question 7 Query ---------------------------------------- 

select category.name, SUM(payment.amount) from payment inner join rental on payment.rental_id = rental.rental_id inner join inventory on rental.inventory_id = inventory.inventory_id inner join film on inventory.film_id = film.film_id inner join film_category on film.film_id = film_category.film_id inner join category on film_category.category_id = category.category_id group by category.name;


---------------------------------------- Question 7 Results ---------------------------------------- 					

    name     |   sum   
-------------+---------
 Sports      | 5314.21
 Classics    | 3639.59
 New         | 4361.57
 Family      | 4226.07
 Comedy      | 4383.58
 Animation   | 4656.30
 Travel      | 3549.64
 Music       | 3417.72
 Drama       | 4587.39
 Horror      | 3722.54
 Sci-Fi      | 4756.98
 Games       | 4281.33
 Documentary | 4217.52
 Foreign     | 4270.67
 Action      | 4375.85
 Children    | 3655.55
(16 rows)
	

---------------------------------------- Question 8 Query ---------------------------------------- 

select count(*) from rental inner join customer on rental.customer_id = customer.customer_id AND customer.first_name = 'JOHN' AND last_name = 'FARNSWORTH';

---------------------------------------- Question 8 Results ---------------------------------------- 					

 count 
-------
    31
(1 row)	

---------------------------------------- Question 9 Query ---------------------------------------- 

select count(*) from payment where payment_date < '2017-01-27';

---------------------------------------- Question 9 Results ---------------------------------------- 					
 count 
-------
   328
(1 row)	

---------------------------------------- Question 10 Query ---------------------------------------- 

CREATE TABLE short_films(
film_id SERIAL PRIMARY KEY,
title VARCHAR(40) NOT NULL,
length INTEGER NOT NULL,
replacement_cost decimal(9,2) NOT NULL,
rating VARCHAR(5) NOT NULL);
	
---------------------------------------- Question 11 Query ---------------------------------------- 

INSERT INTO short_films (film_id, title, length, replacement_cost, rating) select film_id, title, length, replacement_cost, rating from film where length < 50;


---------------------------------------- Question 12 Query ---------------------------------------- 

delete from short_films where replacement_cost > '19.99';


---------------------------------------- Question 13 Query ---------------------------------------- 

alter table short_films add column stars INTEGER DEFAULT 5;


---------------------------------------- Question 14 Query ---------------------------------------- 

alter table short_films rename column length to length_min;

alter table short_films add column length_sec INTEGER;

update short_films set length_sec = length_min * 60;

---------------------------------------- Question 15 Query ---------------------------------------- 

drop table short_films cascade;


